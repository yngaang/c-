#include <locale>
#include <iostream>
#include <stack>

int main() {
	using namespace std;

	stack <int> t1;
	stack <int> t2;
	stack <int> t3;

 	int n = 10;

	for (int i = n; i >= 1; i--) {
		t1.push(i);
		cout << t1.top() << endl;
	}

	int activeTower = 0;
	int k = pow(2,n);
	int i = 0;
	for (int i = 1;i<k-1;i++) 
	{
		cout << i << "       " << t1.size() << "       " << t2.size() << "       " << t3.size() << endl;
		if (t2.empty() == true and t3.empty() == true) {
			t2.push(t1.top());
			t1.pop();
			activeTower = 2;
		}
		if (activeTower == 3 and t1.empty() == true) {
			if (t2.top() % 2 != 0) {
				t3.push(t2.top());
				t2.pop();
				activeTower = 3;
			}
			else {
				t1.push(t2.top());
				t2.pop();
				activeTower = 1;
			}
			continue;

		}
		
		if (activeTower == 2 and t3.empty() == true) {
			if (t1.top() % 2 != 0) {
				t2.push(t1.top());
				t1.pop();
				activeTower = 2;
			}
			else {
				t3.push(t1.top());
				t1.pop();
				activeTower = 3;
			}
			continue;
		}

		if (activeTower == 3 and t2.empty() == true) {
			t2.push(t1.top());
			t1.pop();
			activeTower = 2;
			continue;
		}

		if (activeTower == 1 and t3.top() < t2.top()) {
			if (t3.top() % 2 != 0) {
				t1.push(t3.top());
				t3.pop();
				activeTower = 1;
			}
			else {
				t2.push(t3.top());
				t3.pop();
				activeTower = 2;
			}
			continue;
		}

		if (activeTower == 1 and t2.top() < t3.top()) {
			if (t2.top() % 2 != 0) {
				t3.push(t2.top());
				t2.pop();
				activeTower = 3;
			}
			else {
				t1.push(t2.top());
				t2.pop();
				activeTower = 1;
			}
			continue;
		}

		if (activeTower == 2 and t3.top() < t1.top()) {
			if (t3.top() % 2 != 0) {
				t1.push(t3.top());
				t3.pop();
				activeTower = 1;		
			}
			else {
				t2.push(t3.top());
				t3.pop();
				activeTower = 2;
			}
			continue;
		}

		if (activeTower == 2 and t1.top() < t3.top()) {
			if (t1.top() % 2 != 0) {
				t2.push(t1.top());
				t1.pop();
				activeTower = 2;
			}
			else {
				t3.push(t1.top());
				t1.pop();
				activeTower = 3;
			}
			continue;
		}
		
		if (activeTower == 3 and t1.top() < t2.top()) {
			t2.push(t1.top());
			t1.pop();
			activeTower = 2;
			continue;
		}

		if (activeTower == 3 and t2.top() < t1.top()) {
			if (t2.top() % 2 != 0) {
				t3.push(t2.top());
				t2.pop();
				activeTower = 3;
			}
			else {
				t1.push(t2.top());
				t2.pop();
				activeTower = 1;
			}
			continue;
		}
		
	}

	cout << endl;
	cout << "Tower 3:"<< endl;
	while (t3.empty() == false) {
		cout << t3.top() << endl;
		t3.pop();
	}
}
